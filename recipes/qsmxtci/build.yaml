name: qsmxtci  
version: 8.1.3
copyright:
  - license: GPL-3.0-only
    url: https://github.com/QSMxT/QSMxT/blob/main/LICENSE
architectures:
  - x86_64
  - aarch64

build:
  kind: neurodocker
  base-image: vnmd/qsmxt_8.1.3:latest
  pkg-manager: apt
  
  directives:
    - install:
        - python3-pip
        - git
        - wget
        - jq
        - curl
    
    - workdir: /opt/qsm-ci
    
    # Install QSM-CI evaluation framework and Boutiques
    - run:
        - pip install nibabel scikit-image scikit-learn scipy numpy pandas boutiques
        - git clone https://github.com/QSMxT/QSM-CI-Data.git /opt/qsm-ci-data || echo "QSM-CI-Data not available"
    
    # Copy evaluation scripts
    - copy:
        - qsm_ci_evaluate.py
        - /opt/qsm-ci/evaluate.py

    - copy:
        - qsm_ci_runner.sh
        - /opt/qsm-ci/runner.sh

    # Copy algorithm scripts
    - copy:
        - qsm_tgv_algorithm.jl
        - /opt/qsm-ci/qsm_tgv_algorithm.jl

    - copy:
        - qsm_nextqsm_algorithm.py
        - /opt/qsm-ci/qsm_nextqsm_algorithm.py

    - copy:
        - qsm_rts_algorithm.py
        - /opt/qsm-ci/qsm_rts_algorithm.py

    - copy:
        - qsm_tv_algorithm.py
        - /opt/qsm-ci/qsm_tv_algorithm.py

    # Create extraction script location
    - run:
        - mkdir -p /scripts

    - copy:
        - extract_descriptors.sh
        - /scripts/extract_descriptors.sh
    
    - environment:
        PATH: $PATH:/opt/qsm-ci:/scripts
        QSM_CI_DATA: /opt/qsm-ci-data
    
    - run:
        - chmod +x /opt/qsm-ci/runner.sh
        - chmod +x /scripts/extract_descriptors.sh
        - chmod +x /opt/qsm-ci/*.jl
        - chmod +x /opt/qsm-ci/*.py
    
    # Multiple Boutiques descriptors for different QSM algorithms
    # Each descriptor formally defines one algorithm's interface
    
    - boutique:
        name: qsm-tgv
        description: QSM reconstruction using Total Generalized Variation
        tool-version: v8.1.3
        schema-version: '0.5'
        container-image:
          type: docker
          image: astewartau/qsmxtci_8.1.3:latest
        command-line: >-
          qsm_tgv_algorithm.jl [OUTPUT_FILE]
          --mag_files [MAG_FILES]
          --phase_files [PHASE_FILES]
          --echo_times [ECHO_TIMES]
          --field_strength [FIELD_STRENGTH]
          --mask_file [MASK_FILE]
          --tgv_iterations [TGV_ITERATIONS]
          --tgv_alpha1 [TGV_ALPHA1]
          --tgv_alpha2 [TGV_ALPHA2]
        inputs:
          - name: magnitude_files
            id: magnitude_files
            description: Multi-echo magnitude images
            type: File
            list: true
            optional: false
            value-key: '[MAG_FILES]'
          - name: phase_files
            id: phase_files
            description: Multi-echo phase images
            type: File
            list: true
            optional: false
            value-key: '[PHASE_FILES]'
          - name: echo_times
            id: echo_times
            description: Echo times in seconds
            type: Number
            list: true
            optional: false
            value-key: '[ECHO_TIMES]'
          - name: field_strength
            id: field_strength
            description: Magnetic field strength in Tesla
            type: Number
            optional: false
            value-key: '[FIELD_STRENGTH]'
          - name: mask_file
            id: mask_file
            description: Brain mask file
            type: File
            optional: false
            value-key: '[MASK_FILE]'
          - name: output_file
            id: output_file
            description: Output QSM map file path
            type: String
            optional: false
            value-key: '[OUTPUT_FILE]'
          - name: tgv_iterations
            id: tgv_iterations
            description: Number of TGV iterations
            type: Number
            default-value: 1000
            optional: true
            value-key: '[TGV_ITERATIONS]'
          - name: tgv_alpha1
            id: tgv_alpha1
            description: TGV regularization parameter alpha1
            type: Number
            default-value: 0.0015
            optional: true
            value-key: '[TGV_ALPHA1]'
          - name: tgv_alpha2
            id: tgv_alpha2
            description: TGV regularization parameter alpha2
            type: Number
            default-value: 0.0005
            optional: true
            value-key: '[TGV_ALPHA2]'
        output-files:
          - name: qsm_map
            id: qsm_map
            description: Quantitative susceptibility map
            path-template: "[OUTPUT_FILE]"
          - name: metrics
            id: metrics
            description: Evaluation metrics (if ground truth available)
            path-template: "metrics.json"
            optional: true
        tags:
          evaluation: qsm-ci.yml
        custom:
          evaluation-config:
            output-patterns: ["*chi*.nii*", "*Chimap*.nii*", "*qsm*.nii*"]
            
    - boutique:
        name: qsm-nextqsm
        description: QSM reconstruction using NeXtQSM deep learning
        tool-version: v8.1.3
        schema-version: '0.5'
        container-image:
          type: docker
          image: astewartau/qsmxtci_8.1.3:latest
        command-line: >-
          qsm_nextqsm_algorithm.py [OUTPUT_FILE]
          --mag_files [MAG_FILES]
          --phase_files [PHASE_FILES]
          --echo_times [ECHO_TIMES]
          --field_strength [FIELD_STRENGTH]
          --mask_file [MASK_FILE]
        inputs:
          - name: magnitude_files
            id: magnitude_files
            description: Multi-echo magnitude images
            type: File
            list: true
            optional: false
            value-key: '[MAG_FILES]'
          - name: phase_files
            id: phase_files
            description: Multi-echo phase images
            type: File
            list: true
            optional: false
            value-key: '[PHASE_FILES]'
          - name: echo_times
            id: echo_times
            description: Echo times in seconds
            type: Number
            list: true
            optional: false
            value-key: '[ECHO_TIMES]'
          - name: field_strength
            id: field_strength
            description: Magnetic field strength in Tesla
            type: Number
            optional: false
            value-key: '[FIELD_STRENGTH]'
          - name: mask_file
            id: mask_file
            description: Brain mask file
            type: File
            optional: false
            value-key: '[MASK_FILE]'
          - name: output_file
            id: output_file
            description: Output QSM map file path
            type: String
            optional: false
            value-key: '[OUTPUT_FILE]'
        output-files:
          - name: qsm_map
            id: qsm_map
            description: Quantitative susceptibility map
            path-template: "[OUTPUT_FILE]"
          - name: metrics
            id: metrics
            description: Evaluation metrics (if ground truth available)
            path-template: "metrics.json"
            optional: true
        tags:
          evaluation: qsm-ci.yml
        custom:
          evaluation-config:
            output-patterns: ["*chi*.nii*", "*Chimap*.nii*", "*qsm*.nii*"]
            
    - boutique:
        name: qsm-rts
        description: QSM reconstruction using Rapid Two-Step algorithm
        tool-version: v8.1.3
        schema-version: '0.5'
        container-image:
          type: docker
          image: astewartau/qsmxtci_8.1.3:latest
        command-line: >-
          qsm_rts_algorithm.py [OUTPUT_FILE]
          --mag_files [MAG_FILES]
          --phase_files [PHASE_FILES]
          --echo_times [ECHO_TIMES]
          --field_strength [FIELD_STRENGTH]
          --mask_file [MASK_FILE]
          --unwrapping [UNWRAPPING]
          --bf_algorithm [BF_ALGORITHM]
        inputs:
          - name: magnitude_files
            id: magnitude_files
            description: Multi-echo magnitude images
            type: File
            list: true
            optional: false
            value-key: '[MAG_FILES]'
          - name: phase_files
            id: phase_files
            description: Multi-echo phase images
            type: File
            list: true
            optional: false
            value-key: '[PHASE_FILES]'
          - name: echo_times
            id: echo_times
            description: Echo times in seconds
            type: Number
            list: true
            optional: false
            value-key: '[ECHO_TIMES]'
          - name: field_strength
            id: field_strength
            description: Magnetic field strength in Tesla
            type: Number
            optional: false
            value-key: '[FIELD_STRENGTH]'
          - name: mask_file
            id: mask_file
            description: Brain mask file
            type: File
            optional: false
            value-key: '[MASK_FILE]'
          - name: output_file
            id: output_file
            description: Output QSM map file path
            type: String
            optional: false
            value-key: '[OUTPUT_FILE]'
          - name: unwrapping
            id: unwrapping
            description: Phase unwrapping algorithm
            type: String
            default-value: romeo
            optional: true
            value-key: '[UNWRAPPING]'
            value-choices:
              - romeo
              - laplacian
          - name: bf_algorithm
            id: bf_algorithm
            description: Background field removal algorithm
            type: String
            default-value: vsharp
            optional: true
            value-key: '[BF_ALGORITHM]'
            value-choices:
              - vsharp
              - pdf
        output-files:
          - name: qsm_map
            id: qsm_map
            description: Quantitative susceptibility map
            path-template: "[OUTPUT_FILE]"
          - name: metrics
            id: metrics
            description: Evaluation metrics (if ground truth available)
            path-template: "metrics.json"
            optional: true
        tags:
          evaluation: qsm-ci.yml
        custom:
          evaluation-config:
            output-patterns: ["*chi*.nii*", "*Chimap*.nii*", "*qsm*.nii*"]
            
    - boutique:
        name: qsm-tv
        description: QSM reconstruction using Total Variation
        tool-version: v8.1.3
        schema-version: '0.5'
        container-image:
          type: docker
          image: astewartau/qsmxtci_8.1.3:latest
        command-line: >-
          qsm_tv_algorithm.py [OUTPUT_FILE]
          --mag_files [MAG_FILES]
          --phase_files [PHASE_FILES]
          --echo_times [ECHO_TIMES]
          --field_strength [FIELD_STRENGTH]
          --mask_file [MASK_FILE]
          --unwrapping [UNWRAPPING]
          --bf_algorithm [BF_ALGORITHM]
        inputs:
          - name: magnitude_files
            id: magnitude_files
            description: Multi-echo magnitude images
            type: File
            list: true
            optional: false
            value-key: '[MAG_FILES]'
          - name: phase_files
            id: phase_files
            description: Multi-echo phase images
            type: File
            list: true
            optional: false
            value-key: '[PHASE_FILES]'
          - name: echo_times
            id: echo_times
            description: Echo times in seconds
            type: Number
            list: true
            optional: false
            value-key: '[ECHO_TIMES]'
          - name: field_strength
            id: field_strength
            description: Magnetic field strength in Tesla
            type: Number
            optional: false
            value-key: '[FIELD_STRENGTH]'
          - name: mask_file
            id: mask_file
            description: Brain mask file
            type: File
            optional: false
            value-key: '[MASK_FILE]'
          - name: output_file
            id: output_file
            description: Output QSM map file path
            type: String
            optional: false
            value-key: '[OUTPUT_FILE]'
          - name: unwrapping
            id: unwrapping
            description: Phase unwrapping algorithm
            type: String
            default-value: romeo
            optional: true
            value-key: '[UNWRAPPING]'
            value-choices:
              - romeo
              - laplacian
          - name: bf_algorithm
            id: bf_algorithm
            description: Background field removal algorithm
            type: String
            default-value: pdf
            optional: true
            value-key: '[BF_ALGORITHM]'
            value-choices:
              - vsharp
              - pdf
        output-files:
          - name: qsm_map
            id: qsm_map
            description: Quantitative susceptibility map
            path-template: "[OUTPUT_FILE]"
          - name: metrics
            id: metrics
            description: Evaluation metrics (if ground truth available)
            path-template: "metrics.json"
            optional: true
        tags:
          evaluation: qsm-ci.yml
        custom:
          evaluation-config:
            output-patterns: ["*chi*.nii*", "*Chimap*.nii*", "*qsm*.nii*"]

deploy:
  path:
    - /opt/qsm-ci
  bins:
    - qsmxt
    - runner.sh
    - evaluate.py
    - qsm_tgv_algorithm.jl
    - qsm_nextqsm_algorithm.py
    - qsm_rts_algorithm.py
    - qsm_tv_algorithm.py

categories:
  - phase processing
  - image reconstruction
  - quantitative imaging

readme: |-
  ----------------------------------
  ## QSMxT-CI/{{ context.version }} ##
  
  QSMxT container with QSM-CI benchmarking integration.
  This container provides multiple QSM reconstruction algorithms with
  automated evaluation capabilities for the QSM-CI benchmarking platform.
  
  Available algorithms (via Boutiques descriptors):
  - qsm-tgv: Total Generalized Variation
  - qsm-nextqsm: NeXtQSM deep learning
  - qsm-rts: Rapid Two-Step
  - qsm-tv: Total Variation
  
  Each algorithm is formally defined with its own Boutiques descriptor,
  allowing independent evaluation while sharing the same container.
  
  Example usage:
  ```bash
  # Run TGV algorithm
  singularity exec qsmxt-ci.sif runner.sh qsm-tgv /data/bids /output
  
  # Run NeXtQSM algorithm  
  singularity exec qsmxt-ci.sif runner.sh qsm-nextqsm /data/bids /output
  
  # Run with custom parameters (using Boutiques)
  bosh exec launch qsmxt-ci.sif qsm-rts inputs.json
  ```
  
  The container automatically runs evaluation metrics if ground truth
  is available in the BIDS derivatives.
  
  ----------------------------------
